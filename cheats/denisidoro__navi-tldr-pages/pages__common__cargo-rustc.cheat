; This has been extracted from
; https://github.com/tldr-pages/tldr/blob/master/pages/common/cargo-rustc.md

% cargo-rustc, common

# Build the package and pass options to `rustc`
cargo rustc -- <rustc_options>

# Build artifacts in release mode, with optimizations
cargo rustc --release

# Compile with architecture-specific optimizations for the current CPU
cargo rustc --release -- -C target-cpu=native

# Compile with speed optimizations
cargo rustc -- -C opt-level <1|2|3>

# Compile with [s]ize optimizations (`z` also turns off loop vectorization)
cargo rustc -- -C opt-level <s|z>

# Check if your package uses unsafe code
cargo rustc --lib -- -D unsafe-code

# Build a specific package
cargo rustc --package <package>

# Build only the specified binary
cargo --bin <name>
