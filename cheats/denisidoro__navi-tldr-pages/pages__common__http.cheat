; This has been extracted from
; https://github.com/tldr-pages/tldr/blob/master/pages/common/http.md

% http, common

# Make a simple GET request (shows response header and content)
http <https:__example.org>

# Print specific output content (`H`: request headers, `B`: request body, `h`: response headers, `b`: response body, `m`: response metadata)
http --print <H|B|h|b|m|Hh|Hhb|...> <https:__example.com>

# Specify the HTTP method when sending a request and use a proxy to intercept the request
http <GET|POST|HEAD|PUT|PATCH|DELETE|...> --proxy <http|https>:<http:__localhost:8080|socks5:__localhost:9050|...> <https:__example.com>

# Follow any `3xx` redirects and specify additional headers in a request
http <-F|--follow> <https:__example.com> <'User-Agent: Mozilla_5.0' 'Accept-Encoding: gzip'>

# Authenticate to a server using different authentication methods
http --auth <username:password|token> --auth-type <basic|digest|bearer> <GET|POST|...> <https:__example.com_auth>

# Construct a request but do not send it (similar to a dry-run)
http --offline <GET|DELETE|...> <https:__example.com>

# Use named sessions for persistent custom headers, auth credentials and cookies
http --session <session_name|path_to_session.json> <--auth username:password https:__example.com_auth API-KEY:xxx>

# Upload a file to a form (the example below assumes that the form field is `<input type="file" name="cv" />`)
http --form <POST> <https:__example.com_upload> <cv@path_to_file>
